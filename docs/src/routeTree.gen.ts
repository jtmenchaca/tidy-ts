/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root.tsx"
import { Route as TransposingDataRouteImport } from "./routes/transposing-data.tsx"
import { Route as TransformingDataRouteImport } from "./routes/transforming-data.tsx"
import { Route as StatsModuleRouteImport } from "./routes/stats-module.tsx"
import { Route as SortingArrangingRouteImport } from "./routes/sorting-arranging.tsx"
import { Route as SelectingColumnsRouteImport } from "./routes/selecting-columns.tsx"
import { Route as ReshapingDataRouteImport } from "./routes/reshaping-data.tsx"
import { Route as PerformanceBenchmarksRouteImport } from "./routes/performance-benchmarks.tsx"
import { Route as MissingDataRouteImport } from "./routes/missing-data.tsx"
import { Route as JoiningDataframesRouteImport } from "./routes/joining-dataframes.tsx"
import { Route as GroupingAggregationRouteImport } from "./routes/grouping-aggregation.tsx"
import { Route as GettingStartedRouteImport } from "./routes/getting-started.tsx"
import { Route as FilteringRowsRouteImport } from "./routes/filtering-rows.tsx"
import { Route as DataframeBasicsRouteImport } from "./routes/dataframe-basics.tsx"
import { Route as DataIoRouteImport } from "./routes/data-io.tsx"
import { Route as CreatingDataframesRouteImport } from "./routes/creating-dataframes.tsx"
import { Route as CombiningDataframesRouteImport } from "./routes/combining-dataframes.tsx"
import { Route as AsyncOperationsRouteImport } from "./routes/async-operations.tsx"
import { Route as IndexRouteImport } from "./routes/index.tsx"
import { Route as ExamplesJupyterNotebooksRouteImport } from "./routes/examples/jupyter-notebooks.tsx"
import { Route as ExamplesComprehensiveWorkflowsRouteImport } from "./routes/examples/comprehensive-workflows.tsx"

const TransposingDataRoute = TransposingDataRouteImport.update({
  id: "/transposing-data",
  path: "/transposing-data",
  getParentRoute: () => rootRouteImport,
} as any)
const TransformingDataRoute = TransformingDataRouteImport.update({
  id: "/transforming-data",
  path: "/transforming-data",
  getParentRoute: () => rootRouteImport,
} as any)
const StatsModuleRoute = StatsModuleRouteImport.update({
  id: "/stats-module",
  path: "/stats-module",
  getParentRoute: () => rootRouteImport,
} as any)
const SortingArrangingRoute = SortingArrangingRouteImport.update({
  id: "/sorting-arranging",
  path: "/sorting-arranging",
  getParentRoute: () => rootRouteImport,
} as any)
const SelectingColumnsRoute = SelectingColumnsRouteImport.update({
  id: "/selecting-columns",
  path: "/selecting-columns",
  getParentRoute: () => rootRouteImport,
} as any)
const ReshapingDataRoute = ReshapingDataRouteImport.update({
  id: "/reshaping-data",
  path: "/reshaping-data",
  getParentRoute: () => rootRouteImport,
} as any)
const PerformanceBenchmarksRoute = PerformanceBenchmarksRouteImport.update({
  id: "/performance-benchmarks",
  path: "/performance-benchmarks",
  getParentRoute: () => rootRouteImport,
} as any)
const MissingDataRoute = MissingDataRouteImport.update({
  id: "/missing-data",
  path: "/missing-data",
  getParentRoute: () => rootRouteImport,
} as any)
const JoiningDataframesRoute = JoiningDataframesRouteImport.update({
  id: "/joining-dataframes",
  path: "/joining-dataframes",
  getParentRoute: () => rootRouteImport,
} as any)
const GroupingAggregationRoute = GroupingAggregationRouteImport.update({
  id: "/grouping-aggregation",
  path: "/grouping-aggregation",
  getParentRoute: () => rootRouteImport,
} as any)
const GettingStartedRoute = GettingStartedRouteImport.update({
  id: "/getting-started",
  path: "/getting-started",
  getParentRoute: () => rootRouteImport,
} as any)
const FilteringRowsRoute = FilteringRowsRouteImport.update({
  id: "/filtering-rows",
  path: "/filtering-rows",
  getParentRoute: () => rootRouteImport,
} as any)
const DataframeBasicsRoute = DataframeBasicsRouteImport.update({
  id: "/dataframe-basics",
  path: "/dataframe-basics",
  getParentRoute: () => rootRouteImport,
} as any)
const DataIoRoute = DataIoRouteImport.update({
  id: "/data-io",
  path: "/data-io",
  getParentRoute: () => rootRouteImport,
} as any)
const CreatingDataframesRoute = CreatingDataframesRouteImport.update({
  id: "/creating-dataframes",
  path: "/creating-dataframes",
  getParentRoute: () => rootRouteImport,
} as any)
const CombiningDataframesRoute = CombiningDataframesRouteImport.update({
  id: "/combining-dataframes",
  path: "/combining-dataframes",
  getParentRoute: () => rootRouteImport,
} as any)
const AsyncOperationsRoute = AsyncOperationsRouteImport.update({
  id: "/async-operations",
  path: "/async-operations",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesJupyterNotebooksRoute =
  ExamplesJupyterNotebooksRouteImport.update({
    id: "/examples/jupyter-notebooks",
    path: "/examples/jupyter-notebooks",
    getParentRoute: () => rootRouteImport,
  } as any)
const ExamplesComprehensiveWorkflowsRoute =
  ExamplesComprehensiveWorkflowsRouteImport.update({
    id: "/examples/comprehensive-workflows",
    path: "/examples/comprehensive-workflows",
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/async-operations": typeof AsyncOperationsRoute
  "/combining-dataframes": typeof CombiningDataframesRoute
  "/creating-dataframes": typeof CreatingDataframesRoute
  "/data-io": typeof DataIoRoute
  "/dataframe-basics": typeof DataframeBasicsRoute
  "/filtering-rows": typeof FilteringRowsRoute
  "/getting-started": typeof GettingStartedRoute
  "/grouping-aggregation": typeof GroupingAggregationRoute
  "/joining-dataframes": typeof JoiningDataframesRoute
  "/missing-data": typeof MissingDataRoute
  "/performance-benchmarks": typeof PerformanceBenchmarksRoute
  "/reshaping-data": typeof ReshapingDataRoute
  "/selecting-columns": typeof SelectingColumnsRoute
  "/sorting-arranging": typeof SortingArrangingRoute
  "/stats-module": typeof StatsModuleRoute
  "/transforming-data": typeof TransformingDataRoute
  "/transposing-data": typeof TransposingDataRoute
  "/examples/comprehensive-workflows": typeof ExamplesComprehensiveWorkflowsRoute
  "/examples/jupyter-notebooks": typeof ExamplesJupyterNotebooksRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/async-operations": typeof AsyncOperationsRoute
  "/combining-dataframes": typeof CombiningDataframesRoute
  "/creating-dataframes": typeof CreatingDataframesRoute
  "/data-io": typeof DataIoRoute
  "/dataframe-basics": typeof DataframeBasicsRoute
  "/filtering-rows": typeof FilteringRowsRoute
  "/getting-started": typeof GettingStartedRoute
  "/grouping-aggregation": typeof GroupingAggregationRoute
  "/joining-dataframes": typeof JoiningDataframesRoute
  "/missing-data": typeof MissingDataRoute
  "/performance-benchmarks": typeof PerformanceBenchmarksRoute
  "/reshaping-data": typeof ReshapingDataRoute
  "/selecting-columns": typeof SelectingColumnsRoute
  "/sorting-arranging": typeof SortingArrangingRoute
  "/stats-module": typeof StatsModuleRoute
  "/transforming-data": typeof TransformingDataRoute
  "/transposing-data": typeof TransposingDataRoute
  "/examples/comprehensive-workflows": typeof ExamplesComprehensiveWorkflowsRoute
  "/examples/jupyter-notebooks": typeof ExamplesJupyterNotebooksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/async-operations": typeof AsyncOperationsRoute
  "/combining-dataframes": typeof CombiningDataframesRoute
  "/creating-dataframes": typeof CreatingDataframesRoute
  "/data-io": typeof DataIoRoute
  "/dataframe-basics": typeof DataframeBasicsRoute
  "/filtering-rows": typeof FilteringRowsRoute
  "/getting-started": typeof GettingStartedRoute
  "/grouping-aggregation": typeof GroupingAggregationRoute
  "/joining-dataframes": typeof JoiningDataframesRoute
  "/missing-data": typeof MissingDataRoute
  "/performance-benchmarks": typeof PerformanceBenchmarksRoute
  "/reshaping-data": typeof ReshapingDataRoute
  "/selecting-columns": typeof SelectingColumnsRoute
  "/sorting-arranging": typeof SortingArrangingRoute
  "/stats-module": typeof StatsModuleRoute
  "/transforming-data": typeof TransformingDataRoute
  "/transposing-data": typeof TransposingDataRoute
  "/examples/comprehensive-workflows": typeof ExamplesComprehensiveWorkflowsRoute
  "/examples/jupyter-notebooks": typeof ExamplesJupyterNotebooksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/async-operations"
    | "/combining-dataframes"
    | "/creating-dataframes"
    | "/data-io"
    | "/dataframe-basics"
    | "/filtering-rows"
    | "/getting-started"
    | "/grouping-aggregation"
    | "/joining-dataframes"
    | "/missing-data"
    | "/performance-benchmarks"
    | "/reshaping-data"
    | "/selecting-columns"
    | "/sorting-arranging"
    | "/stats-module"
    | "/transforming-data"
    | "/transposing-data"
    | "/examples/comprehensive-workflows"
    | "/examples/jupyter-notebooks"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/async-operations"
    | "/combining-dataframes"
    | "/creating-dataframes"
    | "/data-io"
    | "/dataframe-basics"
    | "/filtering-rows"
    | "/getting-started"
    | "/grouping-aggregation"
    | "/joining-dataframes"
    | "/missing-data"
    | "/performance-benchmarks"
    | "/reshaping-data"
    | "/selecting-columns"
    | "/sorting-arranging"
    | "/stats-module"
    | "/transforming-data"
    | "/transposing-data"
    | "/examples/comprehensive-workflows"
    | "/examples/jupyter-notebooks"
  id:
    | "__root__"
    | "/"
    | "/async-operations"
    | "/combining-dataframes"
    | "/creating-dataframes"
    | "/data-io"
    | "/dataframe-basics"
    | "/filtering-rows"
    | "/getting-started"
    | "/grouping-aggregation"
    | "/joining-dataframes"
    | "/missing-data"
    | "/performance-benchmarks"
    | "/reshaping-data"
    | "/selecting-columns"
    | "/sorting-arranging"
    | "/stats-module"
    | "/transforming-data"
    | "/transposing-data"
    | "/examples/comprehensive-workflows"
    | "/examples/jupyter-notebooks"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AsyncOperationsRoute: typeof AsyncOperationsRoute
  CombiningDataframesRoute: typeof CombiningDataframesRoute
  CreatingDataframesRoute: typeof CreatingDataframesRoute
  DataIoRoute: typeof DataIoRoute
  DataframeBasicsRoute: typeof DataframeBasicsRoute
  FilteringRowsRoute: typeof FilteringRowsRoute
  GettingStartedRoute: typeof GettingStartedRoute
  GroupingAggregationRoute: typeof GroupingAggregationRoute
  JoiningDataframesRoute: typeof JoiningDataframesRoute
  MissingDataRoute: typeof MissingDataRoute
  PerformanceBenchmarksRoute: typeof PerformanceBenchmarksRoute
  ReshapingDataRoute: typeof ReshapingDataRoute
  SelectingColumnsRoute: typeof SelectingColumnsRoute
  SortingArrangingRoute: typeof SortingArrangingRoute
  StatsModuleRoute: typeof StatsModuleRoute
  TransformingDataRoute: typeof TransformingDataRoute
  TransposingDataRoute: typeof TransposingDataRoute
  ExamplesComprehensiveWorkflowsRoute: typeof ExamplesComprehensiveWorkflowsRoute
  ExamplesJupyterNotebooksRoute: typeof ExamplesJupyterNotebooksRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/transposing-data": {
      id: "/transposing-data"
      path: "/transposing-data"
      fullPath: "/transposing-data"
      preLoaderRoute: typeof TransposingDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/transforming-data": {
      id: "/transforming-data"
      path: "/transforming-data"
      fullPath: "/transforming-data"
      preLoaderRoute: typeof TransformingDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/stats-module": {
      id: "/stats-module"
      path: "/stats-module"
      fullPath: "/stats-module"
      preLoaderRoute: typeof StatsModuleRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/sorting-arranging": {
      id: "/sorting-arranging"
      path: "/sorting-arranging"
      fullPath: "/sorting-arranging"
      preLoaderRoute: typeof SortingArrangingRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/selecting-columns": {
      id: "/selecting-columns"
      path: "/selecting-columns"
      fullPath: "/selecting-columns"
      preLoaderRoute: typeof SelectingColumnsRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/reshaping-data": {
      id: "/reshaping-data"
      path: "/reshaping-data"
      fullPath: "/reshaping-data"
      preLoaderRoute: typeof ReshapingDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/performance-benchmarks": {
      id: "/performance-benchmarks"
      path: "/performance-benchmarks"
      fullPath: "/performance-benchmarks"
      preLoaderRoute: typeof PerformanceBenchmarksRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/missing-data": {
      id: "/missing-data"
      path: "/missing-data"
      fullPath: "/missing-data"
      preLoaderRoute: typeof MissingDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/joining-dataframes": {
      id: "/joining-dataframes"
      path: "/joining-dataframes"
      fullPath: "/joining-dataframes"
      preLoaderRoute: typeof JoiningDataframesRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/grouping-aggregation": {
      id: "/grouping-aggregation"
      path: "/grouping-aggregation"
      fullPath: "/grouping-aggregation"
      preLoaderRoute: typeof GroupingAggregationRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/getting-started": {
      id: "/getting-started"
      path: "/getting-started"
      fullPath: "/getting-started"
      preLoaderRoute: typeof GettingStartedRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/filtering-rows": {
      id: "/filtering-rows"
      path: "/filtering-rows"
      fullPath: "/filtering-rows"
      preLoaderRoute: typeof FilteringRowsRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/dataframe-basics": {
      id: "/dataframe-basics"
      path: "/dataframe-basics"
      fullPath: "/dataframe-basics"
      preLoaderRoute: typeof DataframeBasicsRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/data-io": {
      id: "/data-io"
      path: "/data-io"
      fullPath: "/data-io"
      preLoaderRoute: typeof DataIoRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/creating-dataframes": {
      id: "/creating-dataframes"
      path: "/creating-dataframes"
      fullPath: "/creating-dataframes"
      preLoaderRoute: typeof CreatingDataframesRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/combining-dataframes": {
      id: "/combining-dataframes"
      path: "/combining-dataframes"
      fullPath: "/combining-dataframes"
      preLoaderRoute: typeof CombiningDataframesRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/async-operations": {
      id: "/async-operations"
      path: "/async-operations"
      fullPath: "/async-operations"
      preLoaderRoute: typeof AsyncOperationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/examples/jupyter-notebooks": {
      id: "/examples/jupyter-notebooks"
      path: "/examples/jupyter-notebooks"
      fullPath: "/examples/jupyter-notebooks"
      preLoaderRoute: typeof ExamplesJupyterNotebooksRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/examples/comprehensive-workflows": {
      id: "/examples/comprehensive-workflows"
      path: "/examples/comprehensive-workflows"
      fullPath: "/examples/comprehensive-workflows"
      preLoaderRoute: typeof ExamplesComprehensiveWorkflowsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AsyncOperationsRoute: AsyncOperationsRoute,
  CombiningDataframesRoute: CombiningDataframesRoute,
  CreatingDataframesRoute: CreatingDataframesRoute,
  DataIoRoute: DataIoRoute,
  DataframeBasicsRoute: DataframeBasicsRoute,
  FilteringRowsRoute: FilteringRowsRoute,
  GettingStartedRoute: GettingStartedRoute,
  GroupingAggregationRoute: GroupingAggregationRoute,
  JoiningDataframesRoute: JoiningDataframesRoute,
  MissingDataRoute: MissingDataRoute,
  PerformanceBenchmarksRoute: PerformanceBenchmarksRoute,
  ReshapingDataRoute: ReshapingDataRoute,
  SelectingColumnsRoute: SelectingColumnsRoute,
  SortingArrangingRoute: SortingArrangingRoute,
  StatsModuleRoute: StatsModuleRoute,
  TransformingDataRoute: TransformingDataRoute,
  TransposingDataRoute: TransposingDataRoute,
  ExamplesComprehensiveWorkflowsRoute: ExamplesComprehensiveWorkflowsRoute,
  ExamplesJupyterNotebooksRoute: ExamplesJupyterNotebooksRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
