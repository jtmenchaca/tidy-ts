{
  "license": "Apache-2.0",
  "version": "0.0.1",
  "exports": "./src/mod.ts",
  "compilerOptions": {
    "lib": [
      "deno.ns",
      "dom",
      "deno.unstable"
    ],
    "jsx": "react-jsx",
    "jsxImportSource": "react",
    "jsxImportSourceTypes": "npm:@types/react@^19.1.1"
  },
  "tasks": {
    "ci": "deno fmt --check && deno lint && deno test -A --coverage=cov_profile --parallel src/dataframe examples/dataframe tests/glm tests/statistical_tests && deno coverage cov_profile",
    "benchmark:runner": "cd /Users/jtmenchaca/tidy-ts/tests/benchmarks && deno run -A runner.ts && cd ../..",
    "benchmark:analyze": "cd /Users/jtmenchaca/tidy-ts/tests/benchmarks && deno run -A analyze.ts && cd ../..",
    "benchmark": "deno task benchmark:runner && deno task benchmark:analyze",
    "benchmark-python": "cd /Users/jtmenchaca/tidy-ts/tests/benchmarks && .venv/bin/python python.py && cd ../..",
    "benchmark-r": "cd /Users/jtmenchaca/tidy-ts/tests/benchmarks && Rscript r.R && cd ../..",
    "benchmark-ts": "deno run -A tests/benchmarks/typescript.ts",
    "benchmark-tidy": "deno run -A tests/benchmarks/tidy-ts-only.ts",
    "benchmark-tidy-p": "deno run -A tests/benchmarks/tidy-ts-only-parallel.ts",
    "benchmark-rust-distinct": "cargo run --release --bin test_ultra_optimized_distinct",
    "test-src": "deno test -A --parallel src/dataframe",
    "test-examples": "deno test -A --parallel examples/dataframe",
    "test-stats-tests": "deno test -A --parallel tests/statistical_tests/",
    "test-glm": "deno test -A --parallel tests/glm/",
    "test-gee": "deno test -A --parallel tests/gee/",
    "test-runtimes": "cd tests/runtimes && bash test-runner.sh",
    "coverage": "deno test -A --coverage=cov_profile --parallel src/dataframe examples/dataframe tests/glm tests/statistical_tests && deno coverage cov_profile",
    "coverage-html": "deno test -A --coverage=cov_profile --parallel src/dataframe examples/dataframe tests/glm tests/statistical_tests && deno coverage --html cov_profile",
    "coverage-lcov": "deno test -A --coverage=cov_profile --parallel src/dataframe examples/dataframe tests/glm tests/statistical_tests && deno coverage --lcov --output=cov.lcov cov_profile",
    "coverage-badge": "deno test -A --coverage=cov_profile --parallel src/dataframe examples/dataframe tests/glm tests/statistical_tests && deno coverage cov_profile --detailed | grep -o '[0-9]*\\.[0-9]*%' | head -1 | sed 's/%//' | xargs -I {} echo '![Coverage](https://img.shields.io/badge/coverage-{}-brightgreen)'",
    "wasmbuild": "deno run -A jsr:@deno/wasmbuild@0.19.2 --features wasm --out src/dataframe/lib"
  },
  "importMap": "import_map.json",
  "nodeModulesDir": "auto",
  "vendor": true,
  "fmt": {
    "exclude": [
      "node_modules/",
      "**/*.md",
      "**/*.mdc",
      ".claude/",
      ".cargo/",
      "target/",
      "vendor/",
      "z-other/"
    ]
  },
  "exclude": [
    "node_modules",
    "vendor",
    "z-other",
    "sources",
    "examples/docs-tests",
    "sources/**",
    ".cargo/",
    "tests/runtimes/**",
    "target/",
    "docs/",
    "docs/**",
    "tidy-stats/",
    "src/tidy-stats/rust",
    "tests/tidy-stats/__pycache__",
    "tests/tidy-stats/.venv",
    "/Users/jtmenchaca/tidy-ts/docs/src/routeTree.gen.ts"
  ],
  "workspace": [
    "src/dataframe"
  ]
}
